From 1d00551c4fd4320b64f14c3c8e8a7df50d753f4e Mon Sep 17 00:00:00 2001
From: Colin Godsey <crgodsey@gmail.com>
Date: Sat, 27 Apr 2019 17:43:44 -0600
Subject: [PATCH] IdentityManagementEvent


diff --git a/api/src/main/java/network/ycc/waterdog/api/event/IdentityManagementEvent.java b/api/src/main/java/network/ycc/waterdog/api/event/IdentityManagementEvent.java
new file mode 100644
index 00000000..b351d38f
--- /dev/null
+++ b/api/src/main/java/network/ycc/waterdog/api/event/IdentityManagementEvent.java
@@ -0,0 +1,24 @@
+package network.ycc.waterdog.api.event;
+
+import lombok.Data;
+import lombok.EqualsAndHashCode;
+import lombok.ToString;
+
+import net.md_5.bungee.api.Callback;
+import net.md_5.bungee.api.event.AsyncEvent;
+
+import java.util.UUID;
+
+@Data
+@ToString(callSuper = false)
+@EqualsAndHashCode(callSuper = false)
+public class IdentityManagementEvent extends AsyncEvent<IdentityManagementEvent> {
+    private UUID uuid;
+    private String username;
+
+    public IdentityManagementEvent(UUID uuid, String username, Callback<IdentityManagementEvent> done) {
+        super(done);
+        this.uuid = uuid;
+        this.username = username;
+    }
+}
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index f382df5f..a0f16d53 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -517,7 +517,27 @@ public class InitialHandler extends PacketHandler implements PendingConnection
         HttpClient.get( authURL, ch.getHandle().eventLoop(), handler );
     }
 
-    private void finish()
+    // Waterdog start
+    private void finish() {
+        Callback<network.ycc.waterdog.api.event.IdentityManagementEvent> complete = (result, error) -> {
+            ch.getHandle().eventLoop().execute(() -> {
+                uniqueId = result.getUuid();
+                name = result.getUsername();
+                finish0();
+            });
+        };
+
+        offlineId = UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + getName() ).getBytes( Charsets.UTF_8 ) );
+        if ( uniqueId == null )
+        {
+            uniqueId = offlineId;
+        }
+
+        bungee.getPluginManager().callEvent(new network.ycc.waterdog.api.event.IdentityManagementEvent(uniqueId, getName(), complete));
+    }
+    // Waterdog end
+
+    private void finish0() // Waterdog - rename
     {
         if ( isOnlineMode() )
         {
@@ -549,11 +569,13 @@ public class InitialHandler extends PacketHandler implements PendingConnection
 
         }
 
+        /* Waterdog start - move this up to before IdentityManagementEvent
         offlineId = UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + getName() ).getBytes( Charsets.UTF_8 ) );
         if ( uniqueId == null )
         {
             uniqueId = offlineId;
         }
+        */ // Waterdog end
 
         Callback<LoginEvent> complete = new Callback<LoginEvent>()
         {
-- 
2.17.2 (Apple Git-113)

